from datetime import date
from app import db
from sqlalchemy.orm import validates
from enum import Enum
from app.models import DataSource

class TempRawRegistrant(db.Model):
    DataSource = db.Column(db.Enum(DataSource))
    id = db.Column(db.Integer, primary_key=True)
    RegistrationNUmber = db.Column(db.String)
    RegistrationNUmberWithSoNum = db.Column(db.String)
    Status = db.Column(db.String)
    EffectiveDate= db.Column(db.String)
    Type = db.Column(db.String)
    Prefix= db.Column(db.String)
    FirstName= db.Column(db.String)
    MiddleInitials= db.Column(db.String)
    LastName= db.Column(db.String)
    Suffix= db.Column(db.String)
    PositionTitle= db.Column(db.String)
    PreviousPublicOfficeHolder= db.Column(db.String)
    PreviousPublicOfficeHoldPosition= db.Column(db.String)
    PreviousPublicOfficePositionProgramName= db.Column(db.String)
    PreviousPublicOfficeHoldLastDate = db.Column(db.String)

class RawAddress(db.Model):
    DataSource = db.Column(db.Enum(DataSource))
    id = db.Column(db.Integer, primary_key=True)
    address_line_1 = db.Column(db.String)
    address_line_2 = db.Column(db.String)
    city = db.Column(db.String)
    country = db.Column(db.String)
    postal_code = db.Column(db.String)
    province = db.Column(db.String)
    phone = db.Column(db.String)


class RawRegistrant(db.Model):
    DataSource = db.Column(db.Enum(DataSource))
    id = db.Column(db.Integer, primary_key=True)
    RegistrationNUmber = db.Column(db.String)
    RegistrationNUmberWithSoNum = db.Column(db.String)
    Status = db.Column(db.String)
    EffectiveDate= db.Column(db.String)
    Type = db.Column(db.String)
    Prefix= db.Column(db.String)
    FirstName= db.Column(db.String)
    MiddleInitials= db.Column(db.String)
    LastName= db.Column(db.String)
    Suffix= db.Column(db.String)
    PositionTitle= db.Column(db.String)
    PreviousPublicOfficeHolder= db.Column(db.String)
    PreviousPublicOfficeHoldPosition= db.Column(db.String)
    PreviousPublicOfficePositionProgramName= db.Column(db.String)
    PreviousPublicOfficeHoldLastDate = db.Column(db.String)
    reports = db.relationship('RawLobbyingReport', backref='registrant', lazy=True)
    address_id = db.Column(db.Integer, db.ForeignKey('raw_address.id'))
    address = db.relationship('RawAddress', backref='raw_registrant')

class RawLobbyingReport(db.Model):
    DataSource = db.Column(db.Enum(DataSource)) 
    id = db.Column(db.Integer, primary_key=True)
    SMNumber = db.Column(db.String)
    Status = db.Column(db.String)
    Type = db.Column(db.String)
    SubjectMatter = db.Column(db.String)
    Particulars = db.Column(db.String)
    InitialApprovalDate = db.Column(db.String)
    EffectiveDate = db.Column(db.String)
    ProposedStartDate = db.Column(db.String)
    ProposedEndDate = db.Column(db.String)
    registrant_id = db.Column(db.Integer, db.ForeignKey('raw_registrant.id'))
    communications = db.relationship('RawCommunications', backref='report', lazy=True)

class RawCommunications(db.Model):
    DataSource = db.Column(db.Enum(DataSource))
    id = db.Column(db.Integer, primary_key=True)
    POH_Office = db.Column(db.String)
    POH_Type = db.Column(db.String)
    POH_Position = db.Column(db.String)
    POH_Name = db.Column(db.String)
    CommunicationsMethod = db.Column(db.String)
    CommunicationDate = db.Column(db.String)
    CommunicationGroupId = db.Column(db.String)
    LobbyistNumber = db.Column(db.String)
    LobbyistType = db.Column(db.String)
    LobbyistPrefix = db.Column(db.String)
    LobbyistFirstName = db.Column(db.String)
    LobbyistMiddleInitials = db.Column(db.String)
    LobbyistLastName = db.Column(db.String)
    LobbyistSuffix = db.Column(db.String)
    LobbyistBusiness = db.Column(db.String)
    LobbyistPositionTitle = db.Column(db.String)
    PreviousPublicOfficeHolder = db.Column(db.String)
    PreviousPublicOfficeHoldPosition = db.Column(db.String)
    PreviousPublicOfficePositionProgramName = db.Column(db.String)
    PreviousPublicOfficeHoldLastDate = db.Column(db.String)
    report_id = db.Column(db.Integer, db.ForeignKey('raw_lobbying_report.id'))
