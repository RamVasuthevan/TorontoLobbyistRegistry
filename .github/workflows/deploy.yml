name: Deploy to Vercel

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

# Add this permissions block
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install
      
    - name: Build database
      run: |
        pipenv run python main.py

    - name: Deploy to Vercel
      id: deploy
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          OUTPUT=$(pipenv run bash deploy.sh)
        else
          OUTPUT=$(pipenv run bash deploy.sh --no-prod)
        fi
        echo "deploy_output<<EOF" >> $GITHUB_OUTPUT
        echo "$OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment PR
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const output = `${{ steps.deploy.outputs.deploy_output }}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Deployed to Vercel ðŸš€\n\nOutput:\n\`\`\`\n${output}\n\`\`\``
          })

    - name: Comment Commit
      uses: actions/github-script@v6
      if: github.event_name == 'push'
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const output = `${{ steps.deploy.outputs.deploy_output }}`;
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: `Deployed to Vercel ðŸš€\n\nOutput:\n\`\`\`\n${output}\n\`\`\``
          })